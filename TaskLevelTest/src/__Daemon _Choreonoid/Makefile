#############################################################################
# Makefile for building: ../../exe/Daemon
# Generated by qmake (2.01a) (Qt 4.8.7) on: ? 2? 13 10:42:53 2017
# Project:  Daemon.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile Daemon.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -I/usr/include/xenomai/cobalt -I/usr/include/xenomai -D_GNU_SOURCE -D_REENTRANT -D__COBALT__ -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I/usr/include/xenomai/cobalt -I/usr/include/xenomai -I/usr/include/xenomai/alchemy -I.
LINK          = g++
LFLAGS        = -m64 /usr/lib/xenomai/bootstrap.o -Wl,--wrap=main -Wl,--dynamic-list=/usr/lib/dynlist.ld -L/usr/lib -lcobalt -lpthread -lrt
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lalchemy -lcopperplate -lcobalt -lrt -lpcan -lQtSql -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		RBDataBase.cpp \
		RBMotorController.cpp \
		RBCAN.cpp \
		RBProcessManager.cpp \
		RBFTSensor.cpp \
		RBIMUSensor.cpp \
		RBSmartPower.cpp \
		RBOpticFlowSensor.cpp \
		RBFOGSensor.cpp \
		RBRawLAN.cpp 
OBJECTS       = main.o \
		RBDataBase.o \
		RBMotorController.o \
		RBCAN.o \
		RBProcessManager.o \
		RBFTSensor.o \
		RBIMUSensor.o \
		RBSmartPower.o \
		RBOpticFlowSensor.o \
		RBFOGSensor.o \
		RBRawLAN.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Daemon.pro
QMAKE_TARGET  = Daemon
DESTDIR       = ../../exe/
TARGET        = ../../exe/Daemon

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../../exe/ || $(MKDIR) ../../exe/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: Daemon.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtSql.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile Daemon.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtSql.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile Daemon.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Daemon1.0.0 || $(MKDIR) .tmp/Daemon1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Daemon1.0.0/ && $(COPY_FILE) --parents RBDataBase.h RBLog.h RBDataType.h RBMotorController.h RBCAN.h RBProcessManager.h RBFTSensor.h RBIMUSensor.h RBSmartPower.h RBOpticFlowSensor.h RBFOGSensor.h RBRawLAN.h JointInformation.h ExternHeader.h .tmp/Daemon1.0.0/ && $(COPY_FILE) --parents main.cpp RBDataBase.cpp RBMotorController.cpp RBCAN.cpp RBProcessManager.cpp RBFTSensor.cpp RBIMUSensor.cpp RBSmartPower.cpp RBOpticFlowSensor.cpp RBFOGSensor.cpp RBRawLAN.cpp .tmp/Daemon1.0.0/ && (cd `dirname .tmp/Daemon1.0.0` && $(TAR) Daemon1.0.0.tar Daemon1.0.0 && $(COMPRESS) Daemon1.0.0.tar) && $(MOVE) `dirname .tmp/Daemon1.0.0`/Daemon1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Daemon1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp RBCAN.h \
		RBLog.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h \
		RBRawLAN.h \
		RBDataBase.h \
		../../share/Headers/LANData/GazeboLANData.h \
		JointInformation.h \
		RBProcessManager.h \
		RBMotorController.h \
		RBFTSensor.h \
		RBIMUSensor.h \
		RBSmartPower.h \
		RBOpticFlowSensor.h \
		RBFOGSensor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

RBDataBase.o: RBDataBase.cpp RBDataBase.h \
		RBLog.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBDataBase.o RBDataBase.cpp

RBMotorController.o: RBMotorController.cpp RBMotorController.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h \
		RBCAN.h \
		RBLog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBMotorController.o RBMotorController.cpp

RBCAN.o: RBCAN.cpp RBCAN.h \
		RBLog.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBCAN.o RBCAN.cpp

RBProcessManager.o: RBProcessManager.cpp ExternHeader.h \
		RBMotorController.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h \
		RBCAN.h \
		RBLog.h \
		RBFTSensor.h \
		RBIMUSensor.h \
		RBSmartPower.h \
		RBOpticFlowSensor.h \
		RBFOGSensor.h \
		RBProcessManager.h \
		RBDataBase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBProcessManager.o RBProcessManager.cpp

RBFTSensor.o: RBFTSensor.cpp RBFTSensor.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h \
		RBCAN.h \
		RBLog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBFTSensor.o RBFTSensor.cpp

RBIMUSensor.o: RBIMUSensor.cpp RBIMUSensor.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h \
		RBCAN.h \
		RBLog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBIMUSensor.o RBIMUSensor.cpp

RBSmartPower.o: RBSmartPower.cpp RBSmartPower.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h \
		RBCAN.h \
		RBLog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBSmartPower.o RBSmartPower.cpp

RBOpticFlowSensor.o: RBOpticFlowSensor.cpp RBOpticFlowSensor.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h \
		RBCAN.h \
		RBLog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBOpticFlowSensor.o RBOpticFlowSensor.cpp

RBFOGSensor.o: RBFOGSensor.cpp RBFOGSensor.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h \
		RBLog.h \
		RBIMUSensor.h \
		RBCAN.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBFOGSensor.o RBFOGSensor.cpp

RBRawLAN.o: RBRawLAN.cpp RBRawLAN.h \
		RBLog.h \
		RBDataType.h \
		../../share/Headers/RBSharedMemory.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RBRawLAN.o RBRawLAN.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

